{"category":"ds18b20","color":"#333333","blocks":["__ds18b20_init","__ds18b20_convert","__ds18b20_read"],"jscode":"// Block __ds18b20_init\nvar __ds18b20_init_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"sensor init\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"pin\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"pin\"\n        }\n    ],\n    \"colour\": \"#333333\"\n};\n\nwindow['Blockly'].Blocks['__ds18b20_init'] = {\n    init: function() {\n        this.jsonInit(__ds18b20_init_json);\n    }\n};\n\nwindow['Blockly'].Python['__ds18b20_init'] = function(block) {\n    var pin = block.getFieldValue('pin');\n    return `from machine import Pin\nimport _onewire\n\ndef init(pin):\n  Pin(pin, Pin.OPEN_DRAIN, Pin.PULL_UP)\n  \ndef convert(pin):\n  _onewire.reset(Pin(pin))\n  _onewire.writebyte(Pin(pin), 0xcc)\n  _onewire.writebyte(Pin(pin), 0x44)\n\ndef read(pin):\n  _onewire.reset(Pin(pin))\n  _onewire.writebyte(Pin(pin), 0xcc)\n  _onewire.writebyte(Pin(pin), 0xbe)\n  tlo = _onewire.readbyte(Pin(pin))\n  thi = _onewire.readbyte(Pin(pin))\n  _onewire.reset(Pin(pin))\n  temp = tlo + thi * 256\n  if temp > 32767:\n    temp = temp - 65536\n  temp = temp * 0.0625\n  return(temp)\n\ninit(${pin})\n` + \"\\n\";\n};\n\n// Block __ds18b20_convert\nvar __ds18b20_convert_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"convert command\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"pin\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"pin\"\n        }\n    ],\n    \"colour\": \"#333333\"\n};\n\nwindow['Blockly'].Blocks['__ds18b20_convert'] = {\n    init: function() {\n        this.jsonInit(__ds18b20_convert_json);\n    }\n};\n\nwindow['Blockly'].Python['__ds18b20_convert'] = function(block) {\n    var pin = block.getFieldValue('pin');\n    return `convert(${pin})` + \"\\n\";\n};\n\n// Block __ds18b20_read\nvar __ds18b20_read_json = {\n    \"output\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"read temperature\"\n        }\n    ],\n    \"message1\": \"%1 %2\",\n    \"args1\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"pin\"\n        },\n        {\n            \"type\": \"field_number\",\n            \"value\": 0,\n            \"name\": \"pin\"\n        }\n    ],\n    \"colour\": \"#333333\"\n};\n\nwindow['Blockly'].Blocks['__ds18b20_read'] = {\n    init: function() {\n        this.jsonInit(__ds18b20_read_json);\n    }\n};\n\nwindow['Blockly'].Python['__ds18b20_read'] = function(block) {\n    var pin = block.getFieldValue('pin');\n    return [`read(${pin})`, Blockly.Python.ORDER_CONDITIONAL]\n};\n\n"}